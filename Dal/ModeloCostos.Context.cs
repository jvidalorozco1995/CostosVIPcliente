//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dal
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class COSTOSVIPEnti : DbContext
    {
        public COSTOSVIPEnti()
            : base("name=COSTOSVIPEnti")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Areas> Areas { get; set; }
        public virtual DbSet<ClasificacionPresupuestos> ClasificacionPresupuestos { get; set; }
        public virtual DbSet<DescripcionProyecto> DescripcionProyecto { get; set; }
        public virtual DbSet<Fechas> Fechas { get; set; }
        public virtual DbSet<Ordenes> Ordenes { get; set; }
        public virtual DbSet<Pedidos> Pedidos { get; set; }
        public virtual DbSet<Proyectos> Proyectos { get; set; }
        public virtual DbSet<Salidas> Salidas { get; set; }
        public virtual DbSet<Tipos> Tipos { get; set; }
        public virtual DbSet<VistaCostos> VistaCostos { get; set; }
        public virtual DbSet<VistaCostosGastos> VistaCostosGastos { get; set; }
        public virtual DbSet<Descuentos> Descuentos { get; set; }
        public virtual DbSet<CostosPptoProg> CostosPptoProg { get; set; }
        public virtual DbSet<CostoEntrado> CostoEntrado { get; set; }
    
        public virtual int ActualizarCostosFecha(Nullable<int> idFecha, string proyecto)
        {
            var idFechaParameter = idFecha.HasValue ?
                new ObjectParameter("IdFecha", idFecha) :
                new ObjectParameter("IdFecha", typeof(int));
    
            var proyectoParameter = proyecto != null ?
                new ObjectParameter("Proyecto", proyecto) :
                new ObjectParameter("Proyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCostosFecha", idFechaParameter, proyectoParameter);
        }
    }
}
